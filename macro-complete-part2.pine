group_m02 = 'London 02:33 AM 03:00 Macro'
m02330300 = input.bool(false, '02:33 AM 03:00', group = group_m02)
m02_top   = input.bool(true, 'Top Line', inline = 'mc02', group = group_m02)
m02_mid   = input.bool(true, 'Mid Line', inline = 'mc02', group = group_m02)
m02_bot   = input.bool(true, 'Bottom Line', inline = 'mc02', group = group_m02)
m02_ext   = input.bool(true, 'Extending Lines', inline = 'mc02', group = group_m02)

group_m04 = 'London 04:03 AM 04:30 Macro'
m04030430 = input.bool(false, '04:03 AM 04:30', group = group_m04)
m04_top   = input.bool(true, 'Top Line', inline = 'mc04', group = group_m04)
m04_mid   = input.bool(true, 'Mid Line', inline = 'mc04', group = group_m04)
m04_bot   = input.bool(true, 'Bottom Line', inline = 'mc04', group = group_m04)
m04_ext   = input.bool(true, 'Extending Lines', inline = 'mc04', group = group_m04)

group_ny     = 'New York Time Settings'
// Auto-detect DST based on date
is_ny_dst() =>
    y = year(timenow)
    // Second Sunday in March
    dst_start_month = 3  // March
    dst_start_day = 1    // Start from day 1
    while dayofweek(timestamp(y, dst_start_month, dst_start_day)) != dayofweek.sunday or dst_start_day <= 7
        dst_start_day += 1
    dst_start_day += 7   // Second Sunday
    
    // First Sunday in November
    dst_end_month = 11   // November
    dst_end_day = 1      // Start from day 1
    while dayofweek(timestamp(y, dst_end_month, dst_end_day)) != dayofweek.sunday
        dst_end_day += 1
    
    dst_start = timestamp(y, dst_start_month, dst_start_day)
    dst_end = timestamp(y, dst_end_month, dst_end_day)
    
    timenow >= dst_start and timenow < dst_end

nySummerTime = is_ny_dst()