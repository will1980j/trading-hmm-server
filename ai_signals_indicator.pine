//@version=5
indicator("AI Trading Signals", overlay=true)

// Inputs
show_ai_signals = input.bool(true, "Show AI Signals")
show_sweep_levels = input.bool(true, "Show Sweep Levels")
show_entry_zones = input.bool(true, "Show Entry Zones")
ai_server_url = input.string("http://127.0.0.1:8080", "AI Server URL")

// Colors
buy_color = input.color(color.lime, "Buy Signal Color")
sell_color = input.color(color.red, "Sell Signal Color")
sweep_color = input.color(color.yellow, "Sweep Level Color")
fvg_color = input.color(color.blue, "FVG Entry Color")

// Variables for AI signals
var string current_bias = "NEUTRAL"
var float entry_confidence = 0.0
var float fvg_quality = 0.0
var string recommendation = "WAIT"
var bool ai_buy_signal = false
var bool ai_sell_signal = false

// Session pivot calculation
session_high = ta.highest(high, 20)
session_low = ta.lowest(low, 20)

// Detect potential sweeps
near_session_high = high >= session_high * 0.998
near_session_low = low <= session_low * 1.002

// FVG Detection (matching your indicator logic)
bullish_fvg = high[2] < low[0]
bearish_fvg = low[2] > high[0]

// AI Signal Processing (simulated - would connect to your server)
if barstate.islast and show_ai_signals
    // Simulate AI analysis based on current conditions
    current_session = 
      (hour >= 0 and hour < 8) ? "ASIA" :
      (hour >= 8 and hour < 13) ? "LONDON" :
      (hour >= 13 and hour < 17) ? "NEW YORK AM" : "NEW YORK PM"
    
    // Determine AI signals based on conditions
    if near_session_low and bullish_fvg
        ai_buy_signal := true
        current_bias := "BULLISH"
        entry_confidence := 0.8
        fvg_quality := 0.9
        recommendation := "BUY SETUP"
    else if near_session_high and bearish_fvg
        ai_sell_signal := true
        current_bias := "BEARISH"
        entry_confidence := 0.8
        fvg_quality := 0.9
        recommendation := "SELL SETUP"
    else
        ai_buy_signal := false
        ai_sell_signal := false
        current_bias := "NEUTRAL"
        entry_confidence := 0.3
        fvg_quality := 0.5
        recommendation := "WAIT"

// Plot sweep levels
plot(show_sweep_levels ? session_high : na, "Session High", sweep_color, 2, plot.style_line)
plot(show_sweep_levels ? session_low : na, "Session Low", sweep_color, 2, plot.style_line)

// Mark sweep attempts
plotshape(show_ai_signals and near_session_high, "High Sweep", shape.triangledown, location.abovebar, color.orange, size=size.small)
plotshape(show_ai_signals and near_session_low, "Low Sweep", shape.triangleup, location.belowbar, color.orange, size=size.small)

// AI Entry Signals
plotshape(show_ai_signals and ai_buy_signal, "AI Buy", shape.labelup, location.belowbar, buy_color, text="BUY\nAI", textcolor=color.white, size=size.normal)
plotshape(show_ai_signals and ai_sell_signal, "AI Sell", shape.labeldown, location.abovebar, sell_color, text="SELL\nAI", textcolor=color.white, size=size.normal)

// FVG Entry Zones
bgcolor(show_entry_zones and bullish_fvg and ai_buy_signal ? color.new(buy_color, 90) : na, title="Bullish FVG Zone")
bgcolor(show_entry_zones and bearish_fvg and ai_sell_signal ? color.new(sell_color, 90) : na, title="Bearish FVG Zone")

// AI Status Table
var table ai_status = table.new(position.top_right, 2, 6, bgcolor=color.new(color.black, 80), border_width=1)

if barstate.islast and show_ai_signals
    table.cell(ai_status, 0, 0, "AI STATUS", text_color=color.white, bgcolor=color.gray)
    table.cell(ai_status, 1, 0, "VALUE", text_color=color.white, bgcolor=color.gray)
    
    bias_color = current_bias == "BULLISH" ? buy_color : current_bias == "BEARISH" ? sell_color : color.gray
    table.cell(ai_status, 0, 1, "Bias", text_color=color.white)
    table.cell(ai_status, 1, 1, current_bias, text_color=bias_color)
    
    conf_color = entry_confidence > 0.7 ? color.green : entry_confidence > 0.4 ? color.yellow : color.red
    table.cell(ai_status, 0, 2, "Confidence", text_color=color.white)
    table.cell(ai_status, 1, 2, str.tostring(entry_confidence, "#.##"), text_color=conf_color)
    
    fvg_color_display = fvg_quality > 0.7 ? color.green : fvg_quality > 0.4 ? color.yellow : color.red
    table.cell(ai_status, 0, 3, "FVG Quality", text_color=color.white)
    table.cell(ai_status, 1, 3, str.tostring(fvg_quality, "#.##"), text_color=fvg_color_display)
    
    rec_color = recommendation == "BUY SETUP" or recommendation == "SELL SETUP" ? color.lime : color.gray
    table.cell(ai_status, 0, 4, "Signal", text_color=color.white)
    table.cell(ai_status, 1, 4, recommendation, text_color=rec_color)
    
    table.cell(ai_status, 0, 5, "Session", text_color=color.white)
    table.cell(ai_status, 1, 5, current_session, text_color=color.cyan)

// Alerts
alertcondition(ai_buy_signal, "AI Buy Signal", "AI detected BUY setup: Sweep + FVG formation")
alertcondition(ai_sell_signal, "AI Sell Signal", "AI detected SELL setup: Sweep + FVG formation")
alertcondition(near_session_high or near_session_low, "Sweep Alert", "Price approaching session extreme - watch for sweep")

// Export values for other indicators
plot(current_bias == "BULLISH" ? 1 : current_bias == "BEARISH" ? -1 : 0, "AI Bias", display=display.none)
plot(entry_confidence, "AI Confidence", display=display.none)
plot(fvg_quality, "FVG Quality", display=display.none)