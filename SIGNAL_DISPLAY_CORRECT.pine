//@version=5
indicator("Real Signal Display", overlay=true, max_labels_count=50)

// Display settings
show_signals = input.bool(true, "Show Live Signals")
label_size = input.string("Normal", "Label Size", options=["Tiny", "Small", "Normal", "Large"])
bull_color = input.color(color.new(#00ff88, 0), "Bullish Color")
bear_color = input.color(color.new(#ff4757, 0), "Bearish Color")
text_color = input.color(color.white, "Text Color")

get_label_size() =>
    switch label_size
        "Tiny" => size.tiny
        "Small" => size.small
        "Normal" => size.normal
        "Large" => size.large
        => size.normal

// Alert condition
alertcondition(true, title="Chart Display Signal", message="CHART_SIGNAL_REQUEST")

// Variables to prevent duplicate signals
var int last_signal_bar = -1
var int signal_counter = 0

// ONLY show signal when there's an ACTUAL bias change - not every bar
if barstate.isconfirmed and show_signals and bar_index != last_signal_bar
    
    // Calculate current and previous bias
    current_bias = close > close[5] ? "Bullish" : "Bearish"
    previous_bias = close[1] > close[6] ? "Bullish" : "Bearish"
    
    // ONLY create label when bias actually changes
    if current_bias != previous_bias
        last_signal_bar := bar_index
        signal_counter := signal_counter + 1
        
        // Create signal label
        direction_icon = current_bias == "Bullish" ? "▲" : "▼"
        signal_title = current_bias == "Bullish" ? "LONG" : "SHORT"
        
        label_text = direction_icon + " " + signal_title + " SIGNAL\n" + 
                     "━━━━━━━━━━━━━━━━━━━━\n" +
                     "💪 Strength: 85%\n" +
                     "💰 Price: " + str.tostring(close, "#.##") + "\n" +
                     "⏰ " + str.format_time(time, "HH:mm", "America/New_York")
        
        signal_color = current_bias == "Bullish" ? bull_color : bear_color
        signal_style = current_bias == "Bullish" ? label.style_label_up : label.style_label_down
        signal_y = current_bias == "Bullish" ? low - (high-low)*0.15 : high + (high-low)*0.15
        
        label.new(bar_index, signal_y, 
                  label_text,
                  color=color.new(signal_color, 10), 
                  textcolor=text_color, 
                  style=signal_style, 
                  size=get_label_size(),
                  tooltip="Live Signal from Webhook")

// Performance table
var table perf_table = table.new(position.top_right, 2, 3, bgcolor=color.new(color.black, 85), border_width=1)

if barstate.islast
    table.cell(perf_table, 0, 0, "🔥 LIVE SIGNALS", text_color=color.white, bgcolor=color.new(#1a1a2e, 0))
    table.cell(perf_table, 1, 0, "📊 STATUS", text_color=color.white, bgcolor=color.new(#1a1a2e, 0))
    
    table.cell(perf_table, 0, 1, "Total Signals", text_color=color.white)
    table.cell(perf_table, 1, 1, str.tostring(signal_counter), text_color=color.new(#00ff88, 0))
    
    table.cell(perf_table, 0, 2, "Data Source", text_color=color.white)
    table.cell(perf_table, 1, 2, "🌐 WEBHOOK", text_color=color.new(#00ff88, 0))