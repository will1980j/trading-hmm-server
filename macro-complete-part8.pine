//-----------------------------------------------------------------------------}
// Function to check if current bar is at a specific hour and minute
//-----------------------------------------------------------------------------{
is_time(h, m) =>
    // Apply user-defined timezone offset
    adjusted_hour = (h + timezone_offset) % 24
    
    // Simple time comparison - just check if hour and minute match
    hour == adjusted_hour and minute == m

//-----------------------------------------------------------------------------}
// Process macros if on supported timeframe
//-----------------------------------------------------------------------------{
// === Debug Table ===
if show_debug and barstate.islast
    var table debug_table = table.new(position.top_right, 3, 3)
    table.cell(debug_table, 0, 0, "Current Hour:", text_color=color.white)
    table.cell(debug_table, 1, 0, str.tostring(hour), text_color=color.yellow)
    table.cell(debug_table, 0, 1, "Current Minute:", text_color=color.white)
    table.cell(debug_table, 1, 1, str.tostring(minute), text_color=color.yellow)
    table.cell(debug_table, 0, 2, "Timezone Offset:", text_color=color.white)
    table.cell(debug_table, 1, 2, str.tostring(timezone_offset), text_color=color.yellow)

// Function to get HTF pivots
getPivots() =>
    float ph = ta.pivothigh(high, 1, 1)
    float pl = ta.pivotlow(low, 1, 1)
    int t = time[1]
    [ph, pl, t]

// Get HTF pivots using request.security
[htfPivotHigh, htfPivotLow, htfPivotTime] = request.security(syminfo.tickerid, htf, getPivots(), gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)