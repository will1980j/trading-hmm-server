//@version=5
indicator("Simple Test Signal - Always Triggers", overlay=true)

// ============================================================================
// SIMPLE TEST INDICATOR THAT ALWAYS GENERATES SIGNALS
// USE THIS TO TEST IF WEBHOOK/ALERT SYSTEM IS WORKING
// ============================================================================

webhook_url = input.string("https://web-production-cd33.up.railway.app/api/live-signals-v2", "Webhook URL")
enable_webhooks = input.bool(true, "Enable Webhooks")
signal_frequency = input.int(5, "Signal Every N Bars", minval=1, maxval=20)

// Simple signal logic - triggers every N bars
signal_trigger = bar_index % signal_frequency == 0

// Alternate between bullish and bearish
is_bullish = (bar_index / signal_frequency) % 2 == 0
signal_type = is_bullish ? "Bullish" : "Bearish"

// Current session detection
get_current_session() =>
    current_hour = hour(time, "America/New_York")
    current_minute = minute(time, "America/New_York")
    
    if (current_hour == 8 and current_minute >= 30) or (current_hour >= 9 and current_hour <= 11)
        "NY_AM"
    else if current_hour >= 13 and current_hour <= 15
        "NY_PM"
    else if current_hour == 12
        "NY_LUNCH"
    else if current_hour >= 0 and current_hour <= 5
        "LONDON"
    else if current_hour >= 6 and (current_hour < 8 or (current_hour == 8 and current_minute <= 29))
        "NY_PRE"
    else if current_hour >= 20 and current_hour <= 23
        "ASIA"
    else
        "INVALID"

current_session = get_current_session()

// Send webhook alert
if enable_webhooks and barstate.isconfirmed and signal_trigger
    webhook_payload = '{"signal_type":"' + signal_type + '","timestamp":' + str.tostring(time) + ',"session":"' + current_session + '","signal_candle":{"open":' + str.tostring(open) + ',"high":' + str.tostring(high) + ',"low":' + str.tostring(low) + ',"close":' + str.tostring(close) + '},"test_signal":true,"bar_index":' + str.tostring(bar_index) + '}'
    
    alert(webhook_payload, alert.freq_once_per_bar)

// Visual signals
plotshape(signal_trigger and is_bullish, "Test Bull", shape.triangleup, location.belowbar, color.green, size=size.small)
plotshape(signal_trigger and not is_bullish, "Test Bear", shape.triangledown, location.abovebar, color.red, size=size.small)

// Status table
if barstate.islast
    var table status_table = table.new(position.top_right, 2, 6, bgcolor=color.new(color.black, 80), border_width=1)
    
    table.cell(status_table, 0, 0, "TEST SIGNAL", text_color=color.white, text_size=size.small, bgcolor=color.blue)
    table.cell(status_table, 1, 0, "STATUS", text_color=color.white, text_size=size.small, bgcolor=color.blue)
    
    table.cell(status_table, 0, 1, "Session", text_color=color.white, text_size=size.small)
    session_color = current_session == "INVALID" ? color.red : color.green
    table.cell(status_table, 1, 1, current_session, text_color=session_color, text_size=size.small)
    
    table.cell(status_table, 0, 2, "Webhooks", text_color=color.white, text_size=size.small)
    webhook_color = enable_webhooks ? color.green : color.red
    table.cell(status_table, 1, 2, str.tostring(enable_webhooks), text_color=webhook_color, text_size=size.small)
    
    table.cell(status_table, 0, 3, "Frequency", text_color=color.white, text_size=size.small)
    table.cell(status_table, 1, 3, str.tostring(signal_frequency) + " bars", text_color=color.white, text_size=size.small)
    
    table.cell(status_table, 0, 4, "Next Signal", text_color=color.white, text_size=size.small)
    bars_until = signal_frequency - (bar_index % signal_frequency)
    table.cell(status_table, 1, 4, str.tostring(bars_until) + " bars", text_color=color.yellow, text_size=size.small)
    
    table.cell(status_table, 0, 5, "Alert Setup", text_color=color.white, text_size=size.small)
    table.cell(status_table, 1, 5, "Once Per Bar", text_color=color.yellow, text_size=size.small)

// ============================================================================
// INSTRUCTIONS:
// 1. Deploy this simple test indicator
// 2. Set up alert as "Once Per Bar Close"
// 3. It will generate signals every 5 bars (adjustable)
// 4. Check if webhooks are received in your dashboard
// 5. If this works, the issue is with the FVG logic, not the webhook system
// ============================================================================