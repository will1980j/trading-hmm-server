            // Check for new pivot points during macro period
            if showPivotLines and macro.in_macro_period
                // Create new pivot lines
                if isHighPivot
                    line newLine = line.new(bar_index - 1, pivotHighVal, bar_index + pivotLength, pivotHighVal, color=highLineColor, width=1)
                    array.push(highLines, newLine)
                    array.push(highPivots, pivotHighVal)
                    array.push(highPivotTimes, bar_index - 1)
                    
                    // Track this pivot in the macro's own arrays
                    array.push(macro.macro_high_pivots, pivotHighVal)
                    array.push(macro.macro_high_lines, newLine)
                
                if isLowPivot
                    line newLine = line.new(bar_index - 1, pivotLowVal, bar_index + pivotLength, pivotLowVal, color=lowLineColor, width=1)
                    array.push(lowLines, newLine)
                    array.push(lowPivots, pivotLowVal)
                    array.push(lowPivotTimes, bar_index - 1)
                    
                    // Track this pivot in the macro's own arrays
                    array.push(macro.macro_low_pivots, pivotLowVal)
                    array.push(macro.macro_low_lines, newLine)
            // Update macro type based on ongoing price action
            if math.abs(close - open) > math.abs(close[1] - open[1]) * 1.5
                macro.type := "manipulation"
            
            if high - low > (high[1] - low[1]) * 1.3
                macro.type := "expansion"
            
            // Set colors based on current macro type
            color line_color = aColor
            if macro.type == "manipulation"
                line_color := mColor
            else if macro.type == "expansion"
                line_color := eColor
            
            if high > macro.top_price and not na(macro.top_line) and macro.show_top
                macro.top_price := high
                macro.top_line.set_y1(macro.top_price)
                macro.top_line.set_y2(macro.top_price)
                if not enableCustomColors
                    macro.top_line.set_color(line_color)
            
            if low < macro.bot_price and not na(macro.bot_line) and macro.show_bot
                macro.bot_price := low
                macro.bot_line.set_y1(macro.bot_price)
                macro.bot_line.set_y2(macro.bot_price)
                if not enableCustomColors
                    macro.bot_line.set_color(line_color)
            
            if (high > macro.top_price or low < macro.bot_price) and not na(macro.mid_line) and macro.show_mid
                macro.mid_price := math.avg(macro.top_price, macro.bot_price)
                macro.mid_line.set_y1(macro.mid_price)
                macro.mid_line.set_y2(macro.mid_price)
                if not enableCustomColors
                    macro.mid_line.set_color(line_color)
                
            if not na(macro.fill)
                if enableCustomColors
                    macro.fill.set_color(color.new(bgColor, bgTransparency))
                else
                    macro.fill.set_color(color.new(line_color, 90))
            
            array.set(macros, i, macro)